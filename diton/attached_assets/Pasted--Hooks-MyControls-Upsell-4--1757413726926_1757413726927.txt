๐ข ุงููุฏู

ุฅุฒุงูุฉ ุฎุทุฃ ุงููHooks ูู MyControls ููุงุฆููุง.

ุชุตุญูุญ ูุงูุฐุฉ ุงููUpsell ูุนุฑุถ 4 ุฎุทุท (ูููู/ุฃุณุจูุนู/ุดูุฑู/ุณููู) ุจุงููุจุงูุบ ุงูุตุญูุญุฉ ูุฑุจุทูุง ุจูStripe.

ุฌุนู ูุงุฆูุฉ ุงูุฏูู ุชุญุชูู ูู ุฏูู ุงูุนุงููุ ูุชุถุน ุฏููุฉ ุงููุณุชุฎุฏู ูุจุงุดุฑุฉ ุจุนุฏ โAll Countriesโุ ููุณููุญ ุจูุง ูููุณุชุฎุฏู ุงูุนุงุฏู.

ุฅุนุงุฏุฉ ุชุดุบูู ุงููุญุต ุงูุดุงูู ูุงูุชููู ููุท ุนูุฏ ุฎููู ุงููููุณูู ูุงููAPI ูู ุงูุฃุฎุทุงุก.

๐งญ ุซูุงุจุช

ูุง ุชูุญุฐู ููุฒุงุชุ ูุง ุชุบููุฑุงุช ุจุตุฑูุฉ ุฎุงุฑุฌ ูุง ูุฑุฏ ููุง.

ุฃู ููุฏ ุฌุฏูุฏ โุนูููโ ููุญุงุท ุจูSSR-safe (ุชู ุชุทุจููู ุณุงุจููุง).

ุชุดุบูู _ops/phase2/check_all.sh ูู ุงูููุงูุฉุ ูุฅุตูุงุญ ุฃู ุฎุทุฃ ูุธูุฑ ูุจู ุฅููุงุก ุงูุฏูุนุฉ.

1) ุฅุตูุงุญ Hooks ูู MyControls (ุณุจุจ ุงูุฎุทุฃ: ุงุณุชุฏุนุงุก Hooks ุจุดูู ุดุฑุทู)

ุงุณุชุจุฏู ูุญุชูู src/components/chat/MyControls.tsx ุจูุฐุง (ุญุงูุธ ุนูู ุฃู ุฃููููุงุช/ููุงุณุงุช ูุฏูู ุฅู ููุฌุฏุชโุงูููู ุชุฑุชูุจ ุงููHooks ุซุงุจุช):

'use client';

import { useCallback, useEffect, useState } from 'react';
import { emit, on } from '@/lib/bus';
import { useProfileStore } from '@/state/profile'; // ุฅู ูุงู ุงุณู ุงููุชุฌุฑ ูุฎุชูููุง ุนุฏููู
import { useVip } from '@/lib/vip';                 // ุฅู ูู ููุฌุฏุ ุงุณุชุฎุฏู ููุทู VIP ุงูุญุงูู

export default function MyControls() {
  // โ ุฌููุน ุงููHooks ูู ุฃุนูู ุงูููููู ูุจุชุฑุชูุจ ุซุงุจุช
  const { profile } = useProfileStore.getState ? useProfileStore() : { profile: {} as any };
  const { isVip } = useVip ? useVip() : { isVip: false };

  const [likes, setLikes] = useState<number>(0);
  const [paused, setPaused] = useState<boolean>(false);

  // โ ุงุดุชุฑู ูู ุงูุฃุญุฏุงุซ ุฏุงุฆููุง (ูุง ุชุถุน useEffect ุฏุงุฎู ุดุฑุท)
  useEffect(() => {
    const offLikes = on('ui:likeUpdate', (d: any) => {
      if (d?.myLikes !== undefined) setLikes(d.myLikes);
    });
    const offPause = on('ui:playPause', (d: any) => setPaused(!!d?.paused));
    return () => {
      offLikes();
      offPause();
    };
  }, []);

  // โ ูููุจุงูุงุช ุซุงุจุชุฉ (ุจุฏูู ุฅูุดุงุก Hooks ุญุณุจ ุญุงูุฉ)
  const onNext = useCallback(() => emit('match:next'), []);
  const onPrev = useCallback(() => emit(isVip ? 'match:prev' : 'ui:upsell', { feature: 'prev' }), [isVip]);
  const onTogglePeerAudio = useCallback(() => emit('ui:toggleRemoteAudio'), []);
  const onToggleMic = useCallback(() => emit('ui:toggleMic'), []);
  const onLike = useCallback(() => emit('ui:likeToggle'), []);
  const onMasks = useCallback(() => emit(isVip ? 'ui:toggleMasks' : 'ui:upsell', { feature: 'masks' }), [isVip]);
  const onSettings = useCallback(() => emit('ui:openSettings'), []);
  const onPlayPause = useCallback(() => emit('ui:togglePlay'), []);
  const onReport = useCallback(() => emit('ui:reportAndNext'), []);
  const onBeauty = useCallback(() => emit(isVip ? 'ui:toggleBeauty' : 'ui:upsell', { feature: 'beauty' }), [isVip]);
  const onSwitchCam = useCallback(() => emit('media:switchCamera'), []);

  // โ JSX ููุท (ูุง Hooks ุฏุงุฎู ุดุฑูุท)
  return (
    <div className="pointer-events-auto">
      {/* ุฃุนูู ูููู - ุฃุฏูุงุชู: ุชุจุฏูู ูุงููุฑุง + ุชุฌููู + ุนุฏูุงุฏ ุฅุนุฌุงุจุงุชู */}
      <div className="absolute top-2 right-2 flex gap-2 z-[60]">
        <button onClick={onSwitchCam} aria-label="Switch camera" className="btn-ghost">๐</button>
        <button onClick={onBeauty} aria-label="Beauty" className="btn-ghost">{isVip ? 'โจ' : 'โจ๐'}</button>
        <div className="badge">{likes}</div>
      </div>

      {/* ุดุฑูุท ุงูุฃุฏูุงุช ุงูุณููู (ููููโูุณุงุฑ): Next, mute peer, mic, like, masks, settings, pause, report, Prev */}
      <div className="fixed bottom-4 left-1/2 -translate-x-1/2 z-[55] flex items-center gap-3 bg-black/40 backdrop-blur rounded-2xl px-4 py-2">
        <button onClick={onNext} className="btn-primary">Next</button>
        <button onClick={onTogglePeerAudio} className="btn-ghost">๐</button>
        <button onClick={onToggleMic} className="btn-ghost">๐๏ธ</button>
        <button onClick={onLike} className="btn-ghost">โค</button>
        <button onClick={onMasks} className="btn-ghost">{isVip ? '๐คก' : '๐คก๐'}</button>
        <button onClick={onSettings} className="btn-ghost">โ๏ธ</button>
        <button onClick={onPlayPause} className="btn-ghost">{paused ? 'โถ๏ธ' : 'โธ๏ธ'}</button>
        <button onClick={onReport} className="btn-danger">๐ฉ</button>
        <button onClick={onPrev} className="btn-ghost">{isVip ? 'Prev' : 'Prev๐'}</button>
      </div>
    </div>
  );
}


ุงููุจุฏุฃ: ูุง ููุฌุฏ useEffect/useState/Hook ุฏุงุฎู ูุฑูุน ุดุฑุทูุฉ ุฃู ุจุนุฏ return ูุนุชูุฏ ุนูู ุญุงูุฉุ ูุจุฐูู ููุชูู ุชุญุฐูุฑ โchange in the order of Hooksโ.

2) ุฎุทุท ุงููVIP ุงูุตุญูุญุฉ ูู ุงููUpsell + API ุฃุณุนุงุฑ Stripe
ุฃ) ูุตุฏุฑ ุฎุทุท ููุญูุฏ

ุฃุถูู ุงูููู src/lib/plans.ts:

export type Plan = {
  id: string;
  nickname: string;
  interval: 'day' | 'week' | 'month' | 'year';
  amount: number; // cents
  currency: 'usd';
  priceId?: string;
};

export const FALLBACK_PLANS: Plan[] = [
  { id: 'daily',   nickname: 'Daily',   interval: 'day',   amount: 149,  currency: 'usd' },
  { id: 'weekly',  nickname: 'Weekly',  interval: 'week',  amount: 599,  currency: 'usd' },
  { id: 'monthly', nickname: 'Monthly', interval: 'month', amount: 1699, currency: 'usd' },
  { id: 'yearly',  nickname: 'Yearly',  interval: 'year',  amount: 9999, currency: 'usd' },
];

ุจ) ุชุฃูุฏ ุฃู /api/stripe/prices ุชูุฑุฌุน 4 ุฎุทุท ูุฑุชูุจุฉ:
// src/app/api/stripe/prices/route.ts
import { FALLBACK_PLANS } from '@/lib/plans';
import Stripe from 'stripe';

export async function GET() {
  try {
    const key = process.env.STRIPE_SECRET_KEY;
    const ids = [
      process.env.STRIPE_PRICE_DAILY,
      process.env.STRIPE_PRICE_WEEKLY,
      process.env.STRIPE_PRICE_MONTHLY,
      process.env.STRIPE_PRICE_YEARLY,
    ].filter(Boolean) as string[];

    if (!key || ids.length !== 4) {
      return Response.json({ plans: FALLBACK_PLANS }, { status: 200 });
    }

    const stripe = new Stripe(key, { apiVersion: '2024-06-20' });
    const prices = await Promise.all(ids.map(id => stripe.prices.retrieve(id)));
    const plans = prices.map(p => ({
      id: p.id,
      priceId: p.id,
      nickname: p.nickname ?? (p.recurring?.interval ?? 'plan'),
      interval: p.recurring?.interval ?? 'month',
      amount: p.unit_amount ?? 0,
      currency: (p.currency ?? 'usd') as 'usd',
    }));

    // ุชุฑุชูุจ: day, week, month, year
    const order = { day: 0, week: 1, month: 2, year: 3 } as any;
    plans.sort((a,b) => (order[a.interval] ?? 9) - (order[b.interval] ?? 9));

    return Response.json({ plans }, { status: 200 });
  } catch {
    return Response.json({ plans: FALLBACK_PLANS }, { status: 200 });
  }
}

ุฌ) ูุงุฌูุฉ ุงููUpsell ุชุนุฑุถ ุฌููุน ุงูุฎุทุท ุงูุตุญูุญุฉ

ูู UpsellModal (ุฃู ุญูุซ ุชูุนุฑุถ ุงูุชุฑููุฉ) ุงุฌูุจ /api/stripe/prices ูุงุนุฑุถ ูู ุงูุฎุทุท:

// ูุซุงู ูุจุณูุท ุฏุงุฎู UpsellModal.tsx
'use client';
import { useEffect, useState } from 'react';
import type { Plan } from '@/lib/plans';

export default function UpsellModal({ feature }: { feature: string }) {
  const [plans, setPlans] = useState<Plan[]>([]);
  useEffect(() => {
    fetch('/api/stripe/prices').then(r => r.json()).then(d => setPlans(d.plans ?? []));
  }, []);

  return (
    <div className="z-[100] fixed inset-0 grid place-items-center bg-black/60">
      <div className="w-full max-w-md bg-neutral-900 rounded-2xl p-4">
        <h3 className="text-xl font-semibold mb-2">Upgrade to VIP</h3>
        <p className="text-neutral-300 mb-4">Unlock {feature} and more.</p>
        <div className="grid gap-2">
          {plans.map((p) => (
            <form key={p.id} action={`/api/stripe/subscribe`} method="POST" className="flex items-center justify-between bg-neutral-800 rounded-xl p-3">
              <div>
                <div className="font-medium">{p.nickname}</div>
                <div className="text-sm text-neutral-400">
                  ${(p.amount / 100).toFixed(2)} / {p.interval}
                </div>
              </div>
              <input type="hidden" name="priceId" value={(p as any).priceId ?? p.id} />
              <button className="btn-primary" type="submit">Choose</button>
            </form>
          ))}
        </div>
      </div>
    </div>
  );
}


ุฅู ูุงู ูุฏูู /api/stripe/subscribe ุฌุงูุฒูุง ูุณูุนูู ูุจุงุดุฑุฉุ ูุฅูุง ุฃุจูู ููุง ูู ูุณุชุฎุฏููุง ูุฏูู.

3) ูุงุฆูุฉ ุงูุฏูู ุงูุดุงููุฉ + ุฏููุฉ ุงููุณุชุฎุฏู ุฃููุงู

ุฃุถูู ุงูุชุงุจุน world-countries (ูุงุฆูุฉ ISO ุฑุณููุฉ):
pnpm add world-countries

ุญุฏูุซ ููููู ููุชุฑ ุงูุฏูู ูููุฑุฃ ูู ุงูุฏููุ ููุฌูุจ /api/geo ูุชุญุฏูุฏ ุฏููุฉ ุงูุฒุงุฆุฑุ ููุฌุนู ุงูุชุฑุชูุจ: All Countries ุซู ุฏููุฉ ุงููุณุชุฎุฏู ุซู ุจุงูู ุงูุฏูู ุชุฑุชูุจูุง ุฃุจุฌุฏููุง. ูุบูุฑ ุงููVIP: ุงููุณููุญ All + ุฏููุฉ ุงููุณุชุฎุฏูุ ุฃูุง ุจุงูู ุงูุฏูู ูุชุนุทู Upsell.

// src/components/filters/CountryFilter.tsx
'use client';
import { useEffect, useMemo, useState } from 'react';
import countriesRaw from 'world-countries';
import { emit } from '@/lib/bus';
import { useVip } from '@/lib/vip';

type Country = { code: string; name: string };

export default function CountryFilter() {
  const { isVip } = useVip ? useVip() : { isVip: false };
  const [home, setHome] = useState<string | undefined>(undefined);

  useEffect(() => {
    fetch('/api/geo').then(r => r.json()).then(d => setHome(d?.country || d?.countryCode || undefined)).catch(() => {});
  }, []);

  const countries: Country[] = useMemo(() => {
    const list = countriesRaw.map(c => ({ code: c.cca2, name: c.name.common }));
    const my = home ? list.find(c => c.code === home) : undefined;
    const rest = list.filter(c => !home || c.code !== home).sort((a,b) => a.name.localeCompare(b.name));
    const out: Country[] = [{ code: 'ALL', name: 'All Countries' }];
    if (my) out.push(my);
    return out.concat(rest);
  }, [home]);

  const onSelect = (c: Country) => {
    const allowed = isVip || c.code === 'ALL' || (home && c.code === home);
    if (!allowed) {
      emit('ui:upsell', { feature: 'country-filters' });
      return;
    }
    emit('filters:country', { code: c.code });
  };

  return (
    <div className="relative">
      {/* ุฒุฑ ุงูููุชุฑ */}
      <button className="btn-filter">
        ๐ {home ? (countries.find(c => c.code === home)?.name ?? 'Countries') : 'Countries'}
      </button>
      {/* ูุงุฆูุฉ ููุณุฏูุฉ */}
      <div className="dropdown z-[90]">
        {countries.map(c => (
          <button
            key={c.code}
            onClick={() => onSelect(c)}
            className={`dropdown-item ${(!isVip && !(c.code==='ALL' || c.code===home)) ? 'opacity-60' : ''}`}
          >
            {c.name} {(!isVip && !(c.code==='ALL' || c.code===home)) ? '๐' : ''}
          </button>
        ))}
      </div>
    </div>
  );
}


ุงููุชูุฌุฉ: ุงููุงุฆูุฉ ุชูุธูุฑ ูู ุงูุฏููุ ูุชุถุน ุฏููุฉ ุงููุณุชุฎุฏู ูุจุงุดุฑุฉ ุจุนุฏ โAll Countriesโุ ูุชุจูู ูุงุจูุฉ ููุงุณุชุฎุฏุงู ููุฌููุน.

4) ุฃูุงูุฑ ุงูุชูููุฐ ูุงููุญุต

ูููุฐ ุจุงูุชุฑุชูุจ ุงูุชุงูู ูู ุงููShell (ุฃู ุงุฌูุนูุง ูู ูููุฉ ูุงุญุฏุฉ):

# 0) ูุฑุน ุนูู ุขูู + ูุณุฎุฉ ุงุญุชูุงุทูุฉ
git checkout -b fix/phase-2-3
mkdir -p _ops/backups && cp -r src/components/chat/MyControls.tsx "_ops/backups/MyControls_$(date +%s).tsx"

# 1) ุชุซุจูุช ููุชุจุฉ ุงูุฏูู
pnpm add world-countries

# 2) ุจูุงุก ุณุฑูุน ูุญูู
pnpm build

# 3) ูุญุต ุดุงูู (ูุฌุจ ุฃู ููุฑู ุฏูู ุฃุฎุทุงุก) โ ุนุฏูู ุงูุฏูููู ุฅู ูุฒู
_ops/phase2/check_all.sh http://localhost:3000 || true

# 4) ุงุนุงูุฌ ุฃู ุชุญุฐูุฑ/ุฎุทุฃ ูุธูุฑ ููุฑูุง ุซู ุฃุนุฏ ุงููุญุต
       A) ุงูุชุญูู ูู ุดุฑูุท ุงูุฑุณุงุฆู (Message Bar)

ุงููุฏู: ูุนูู ุจุณูุงุณุฉ ุนูู ุงูุฌูุงู ูุณุทุญ ุงูููุชุจ ุจุฏูู ุชุบุทูุฉ ุงูููุฏูู ูุจุญุฏ ุงูุฑุณุงุฆู ุงูุญุงูู ูู ุงูุฎุงุฏู.

ูุง ููููุฐู ุงููููู:

ุถูุงู ุธููุฑ ุญูู ุงูุฅุฏุฎุงูุ ุฒุฑ ุงูุฅุฑุณุงูุ ููุชูุงุญุฉ ุงูุฅูููุฌูุ ูุฃู:

Enter/Send ูุฑุณูุงู ุงูุฑุณุงูุฉุ ูIME ูุง ููุฑุฑ ุงูุฅุฑุณุงู.

ุขุฎุฑ 3 ุฑุณุงุฆู ุชุธูุฑ ููู ุงูุดุฑูุทุ ูุงููุฏูู ููุนุฑุถ ุจุงูุณุญุจ ุงูุนููุฏูุ ูุน ูุณุฎ ุงููุต ุจุงูููุฑ ุงููุทููู.

ูุชู ุชูุฑูุบ ุงูุฑุณุงุฆู ุนูุฏ ุงูุชูุงุก/ุชุจุฏูู ุงููุทุงุจูุฉ.

ูุง ูุบุทู ุงูููุจูุฑุฏ ุงูุดุฑูุท (visualViewport + padding ุฏููุงูููู).

ูุญุต ุญุฏู ุงูุถูู ุฎุงุฏูููุง: ุฅุฑุณุงู ุฑุณุงุฆู ูุชุชุงููุฉ ุญุชู ูุธูุฑ 429 (ููุณุฌููู ูุซู: GUEST_MSG_CODES=200,...,429,...).

ูุง ุชุบููุฑุงุช ุจุตุฑูุฉ ุฎุงุฑุฌ ูุฐู ุงูุจููุฏ.

ูุจูู:

ุงููุชุงุจุฉ/ุงูุฅุฑุณุงู/ุงูุฅูููุฌู ุชุนูู.

ุขุฎุฑ 3 ุฑุณุงุฆู ูุฑุฆูุฉ ูุชููุฑูุบ ุนูุฏ ููุงูุฉ ุงูุฌูุณุฉ.

ูุง ุชุบุทูุฉ ูุน ุงูููุจูุฑุฏ ุนูู ุงูุฌูุงู.

ุชุณูุณู ุงูุฃููุงุฏ ููุธูุฑ 429 ุจุนุฏ ุญุฏู ุงูุฎุงุฏู.

B) ุชุญููู ุฎุทุท VIP ุฅูู ุงูููุฑู (โฌ)

ุงููุฏู: ุนุฑุถ ุงูุฎุทุท ุงูุฃุฑุจุน ุจุงูููุฑู ูู ุงููUpsell ูุจูAPI ุงูุฃุณุนุงุฑ.

ุชุบููุฑุงุช ุจุณูุทุฉ ูู ุงูููุฏ (ููุทุจููุง ุงููููู):

ุชุญุฏูุซ ุฎุทุท fallback ุฅูู EUR:

// src/lib/plans.ts
export const FALLBACK_PLANS = [
  { id: 'daily',   nickname: 'Daily',   interval: 'day',   amount: 149,  currency: 'eur' },
  { id: 'weekly',  nickname: 'Weekly',  interval: 'week',  amount: 599,  currency: 'eur' },
  { id: 'monthly', nickname: 'Monthly', interval: 'month', amount: 1699, currency: 'eur' },
  { id: 'yearly',  nickname: 'Yearly',  interval: 'year',  amount: 9999, currency: 'eur' },
];


ุชูุณูู ุงูุณุนุฑ ุญุณุจ ุงูุนููุฉ ุงููุงุฏูุฉ ูู ุงููAPI (Stripe ุฃู fallback):

// ุฏุงุฎู UpsellModal ูุจู ุงูุนุฑุถ
const fmt = (amt:number, cur:string) =>
  new Intl.NumberFormat(undefined, { style: 'currency', currency: cur as any })
    .format(amt / 100);

// ุนูุฏ ุงูุนุฑุถ: fmt(p.amount, p.currency)  โ ูุนุฑุถ โฌ1.49 / day โฆ ุฅูุฎ


ููุงุญุธุฉ: ุฅู ูุงูุช ูุชุบูุฑุงุช Stripe ูุฏูู ูุฃุณุนุงุฑ ููุฑู ุฃุตูุงูุ ููุฑูุฑ /api/stripe/prices ุงูุนููุฉ ููุง ูู. ูุฅูุง ููfallback ุงูุขู ุจุงูููุฑู.

ูุจูู:

ูุงูุฐุฉ ุงูุชุฑููุฉ ุชุนุฑุถ ุฃุฑุจุน ุฎุทุท: โฌ1.49 ููููุ โฌ5.99 ุฃุณุจูุนูุ โฌ16.99 ุดูุฑูุ โฌ99.99 ุณููู.

/api/stripe/prices ูุนูุฏ currency: "eur" (ููุฎุทุท fallback ุฃู ูู Stripe).

ูุง ูุณุฑ ูุฃู ุชุฏููู Stripe ููุฌูุฏ.                                            ****************************

ูุง ุชุชููู ุญุชู:

ูุฎุชูู ุชุญุฐูุฑ/ุฎุทุฃ Hooks ุชูุงููุง.

/api/stripe/prices ูุนุฑุถ 4 ุฎุทุท ุตุญูุญุฉุ ูุงููUpsell ูุนุฑุถูุง ูููุง.

ูุงุฆูุฉ ุงูุฏูู ุชุนูู ูุชุถุน ุฏููุฉ ุงููุณุชุฎุฏู ุจุนุฏ โAll Countriesโ ูุชูุชุฒู ุจุณูุงุณุฉ VIP.

_ops/phase2/check_all.sh ููุฑูุ ูุงููููุณูู ูุธูู.

ูุฃุฎูุฑูุง:

git add .
git commit -m "fix: stable hooks in MyControls, full VIP plans, smart countries dropdown; pass checks"
git push -u origin fix/phase-2-3


ุฃุจูู ุงููPR ุจูุง ุชุบููุฑุงุช ุจุตุฑูุฉ ุฎุงุฑุฌ ุงูุจููุฏ ุฃุนูุงู. ุฅุฐุง ุธูุฑ ุฃู ุฎุทุฃ ุฌุฏูุฏ ุฃุซูุงุก ุงููุญุตุ ุฃุตูุญู ูุญููููุง ุฏุงุฎู ููุณ ุงููุฑุน ุซู ุฃุนุฏ ุชุดุบูู ุงููุญุต ูุจู ุฅููุงุก ุงูุฏูุนุฉ.