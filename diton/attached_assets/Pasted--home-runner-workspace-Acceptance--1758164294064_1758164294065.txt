اعمل في /home/runner/workspace. أنشئ السكربت ثم شغّله عبر المشغّل. أعد لي ما بعد سطر "-- Acceptance --".

cd /home/runner/workspace

cat > 02_probe_phase2_targets.sh <<'EOF'
#!/usr/bin/env bash
set -euo pipefail
cd "${ROOT:-/home/runner/workspace}"
OUT="_ops/reports/phase2_probe_$(date -u +%Y%m%d-%H%M%S).log"
mkdir -p _ops/reports

p(){ echo; echo "=== $1 ===" | tee -a "$OUT"; }
s(){ [ -f "$1" ] && echo "$1" || echo "MISSING:$1"; }

F1="src/app/chat/rtcFlow.ts"
p "rtcFlow.ts: path $(s "$F1")"
if [ -f "$F1" ]; then
  grep -n "function stop" "$F1" | tee -a "$OUT" || true
  awk '/function stop\(/,/^\}/ {print NR": "$0}' "$F1" | sed -n '1,200p' | tee -a "$OUT"
  p "rtcFlow.ts: abort calls";           grep -n "state\.ac\.abort" "$F1" | tee -a "$OUT" || true
  p "rtcFlow.ts: restartIce occurrences";grep -n "restartIce" "$F1"       | tee -a "$OUT" || true
  p "rtcFlow.ts: connectionstate";       grep -nE "connectionstate|iceconnectionstate" "$F1" | tee -a "$OUT" || true
fi

F2="src/app/chat/ChatClient.tsx"
p "ChatClient.tsx: path $(s "$F2")"
if [ -f "$F2" ]; then
  p "start/stop usage";                  grep -nE "startRtcFlowOnce|stopRtcSession|on(Next|Prev|Cancel)" "$F2" | tee -a "$OUT" || true
  p "srcObject/localStream refs";        grep -nE "srcObject|localStream" "$F2" | tee -a "$OUT" || true
  nl -ba "$F2" | sed -n '1,240p' | tee -a "$OUT"
fi

p "ICE servers (grep urls)"
grep -RniE "iceServers|turn|stun|urls" src/app | tee -a "$OUT" || true

F3="src/lib/rtc/mm.ts"
p "mm.ts: path $(s "$F3")"
if [ -f "$F3" ]; then
  p "prev-wish / prev-for";              grep -nE "prev-wish|prev-for" "$F3" | tee -a "$OUT" || true
  p "SETNX/claim/pairLock";              grep -nE "setNx|SETNX|claim|pairLock" "$F3" | tee -a "$OUT" || true
  p "writes to rtc:last";                grep -nE "rtc:last" "$F3" | tee -a "$OUT" || true
  p "TTL constants (ms)";                grep -nE "TTL|PX|expire|setPx" "$F3" | tee -a "$OUT" || true
  nl -ba "$F3" | sed -n '1,220p' | tee -a "$OUT"
fi

F4="src/app/api/rtc/matchmake/route.ts"
p "matchmake route.ts: path $(s "$F4")"
if [ -f "$F4" ]; then
  p "dynamic/runtime + response";        grep -nE 'export const (dynamic|runtime)|peerAnonId|found' "$F4" | tee -a "$OUT" || true
  nl -ba "$F4" | sed -n '1,160p' | tee -a "$OUT"
fi

echo "-- Acceptance --" | tee -a "$OUT"
echo "PROBE_OK=1"       | tee -a "$OUT"
echo "REPORT=$OUT"      | tee -a "$OUT"
EOF

chmod +x 02_probe_phase2_targets.sh
_ops/bin/run ./02_probe_phase2_targets.sh
