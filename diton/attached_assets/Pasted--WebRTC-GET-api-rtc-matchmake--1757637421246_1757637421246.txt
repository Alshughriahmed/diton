الهدف: مطابقة واتصال WebRTC ناجح بين جهازين. إزالة أي استدعاء GET قديم لـ/api/rtc/matchmake وتثبيت مصدر POST واحد، وتأكيد أن /api/turn يعيد UDP+TCP+TLS:443 على الإنتاج. عدم حذف أو تعطيل أي ميزة. تعديلات Minimal-Diff فقط.

القيود: لا تغيّر منطق الميزات غير المعنية. خذ نسخ احتياطية. ادفع إلى main فقط ما لزم. وفّر تقارير في _ops/reports/….

القبول:

لا وجود لـmatchmake?anonId في السورس ولا في باندل الإنتاج.

/api/turn على الإنتاج يحتوي turn:…3478?transport=tcp وturns:…443?transport=tcp.

_ops/acc_rtc.sh https://www.ditonachat.com ينتهي RC=0، ويظهر pairId واحد وأدوار caller/callee، وتبادل offer/answer/ice سليم.

ضغط Next متزامن على جهازين → يبدأ الفيديو ≤10 ثوان.

سكربت واحد جاهز للتنفيذ (يشخّص، يصلّح إن لزم، يدفع، يتحقق، ثم يُخرج كتلة Acceptance)

انسخ-ألصق ثم أرسل المخرجات:

#!/usr/bin/env bash
set -euo pipefail

ROOT="/home/runner/workspace"
BASE="${BASE:-https://www.ditonachat.com}"
cd "$ROOT"

TS="$(date -u +%Y%m%d-%H%M%S)"
ART="_ops/reports/agent_end2end_${TS}"
BAK="_ops/backups/agent_end2end_${TS}"
mkdir -p "$ART" "$BAK"

# 0) Snapshot
BRANCH="$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo unknown)"
COMMIT="$(git rev-parse --short HEAD 2>/dev/null || echo unknown)"
echo "$BRANCH $COMMIT" > "$ART/git.txt"

# 1) تشخيص مصادر matchmake في السورس
grep -RIn "/api/rtc/matchmake" src || true | tee "$ART/mm_calls_src.txt" >/dev/null
SRC_LEGACY_GET_COUNT="$(grep -RIn 'matchmake\?anonId' src | wc -l | tr -d ' ')"

# 2) إن وُجد GET قديم داخل ChatClient.tsx → طبّق Minimal-Diff: POST-only pollPair
if grep -RInq 'matchmake\?anonId' src/app/chat/ChatClient.tsx; then
  cp -a src/app/chat/ChatClient.tsx "$BAK/ChatClient.tsx"
  perl -0777 -pe 's/async function pollPair\([^\)]*\)\s*\{.*?\}/async function pollPair(ms=1000){\n  for(let i=0;i<60;i++){\n    try{\n      const r = await fetch(\"\\/api\\/rtc\\/matchmake\", { method: \"POST\", cache: \"no-store\" });\n      if(r.status===200){\n        const j = await r.json().catch(()=>({}));\n        if(j?.pairId && j?.role){\n          localStorage.setItem(\"ditona_pair\", j.pairId);\n          localStorage.setItem(\"ditona_role\", j.role);\n          return j;\n        }\n      }\n    }catch{}\n    await new Promise(res=>setTimeout(res, ms));\n  }\n  return null;\n}/s' -i src/app/chat/ChatClient.tsx
fi

# 3) تأكيد وجود الحارس once (لا تعديل إن وُجد)
grep -RIn "startRtcFlowOnce" src || true | tee "$ART/start_once_src.txt" >/dev/null

# 4) بناء محلي
set +e
pnpm build | tee "$ART/build.txt"
BUILD_RC=${PIPESTATUS[0]}
set -e

# 5) دفع للتفعيل على Vercel إذا تغيّر شيء
git add -A >/dev/null 2>&1 || true
CHANGED="$(git diff --cached --name-only | wc -l | tr -d ' ')"
if [ "$CHANGED" -gt 0 ]; then
  git commit -m "fix(rtc): POST-only matchmake poll and ensure once-guard" || true
  git push origin "$BRANCH"
fi

# 6) تحقق من /api/turn على الإنتاج: TCP و TLS:443
TURN_JSON="$ART/turn.json"
curl -sS "$BASE/api/turn" > "$TURN_JSON" || true
HAS_TCP="$(grep -F 'turn:global.turn.twilio.com:3478?transport=tcp' "$TURN_JSON" >/dev/null && echo 1 || echo 0)"
HAS_TLS="$(grep -F 'turns:global.turn.twilio.com:443?transport=tcp' "$TURN_JSON"  >/dev/null && echo 1 || echo 0)"

# 7) تحقق من باندل الإنتاج: لا matchmake?anonId
CHAT_HTML="$ART/chat.html"
curl -sS "$BASE/chat?v=$(date +%s)" -o "$CHAT_HTML" || true
# اجلب ملفات JS العامة من الصفحة
grep -oE 'src="/_next/static/[^"]+\.js"' "$CHAT_HTML" | sed -E 's/src="([^"]+)"/\1/' | sort -u > "$ART/js.list" || true
PROD_LEGACY=0
while read -r u; do
  [ -z "$u" ] && continue
  curl -sS "$BASE$u" -o "$ART/$(basename "$u")" || true
done < "$ART/js.list"
PROD_LEGACY="$(grep -R 'matchmake\?anonId' "$ART" | wc -l | tr -d ' ' || echo 0)"

# 8) قبول REST-RTC كامل
set +e
bash _ops/acc_rtc.sh "$BASE" | tee "$ART/acc_stdout.txt"
ACC_RC=${PIPESTATUS[0]}
set -e

# 9) طباعة القبول
echo
echo "-- Acceptance --"
echo "BRANCH=$BRANCH"
echo "COMMIT=$COMMIT"
echo "BUILD_RC=$BUILD_RC"
echo "SRC_LEGACY_GET=$SRC_LEGACY_GET_COUNT"
echo "PROD_LEGACY_GET=$PROD_LEGACY"
echo "TURN_TCP_PRESENT=$HAS_TCP"
echo "TURN_TLS443_PRESENT=$HAS_TLS"
echo "ACC_RC=$ACC_RC"
echo "ARTIFACTS_DIR=$ART"
echo "BACKUP_DIR=$BAK"
echo "-- End Acceptance --"


النتيجة المطلوبة من الوكيل: كتلة Acceptance بالقيم:

SRC_LEGACY_GET=0 وPROD_LEGACY_GET=0

TURN_TCP_PRESENT=1 وTURN_TLS443_PRESENT=1

ACC_RC=0