أريد إرشادات تشغيلية لكتابة سكربتات Bash في Replit “Shell” تُقبل دائمًا وتُخرِج مخرجات ثابتة بلا اختفاء شاشة ولا إعادة فتح كونسول جديدة. لا تعدّل أي ملف ولا تشغّل أوامر. أجب تخطيطيًا فقط.

سياق مشاكلي:
- أكتب سكربتات “دفعة واحدة” بنمط:
  set -Eeuo pipefail ; set +H ; TS=… ; mkdir -p _ops/{backups,reports}
  طباعة Heartbeat نصي كل 20s ; حفظ لوج بـ tee ; نسخة احتياطية إلى _ops/backups/<label> ; قبول قياسي بين:
  -- Acceptance -- … -- /Acceptance --
- واجهت أعطال متكررة:
  1) توسعة التاريخ في Bash بسبب “!” داخل heredoc: رسائل مثل `bash: !/useEffect/.test: event not found`.
  2) اقتباس sed/awk/heredoc يسبب `syntax error near unexpected token`.
  3) عند لمس ملفات Next.js أثناء dev يحدث restart فتختفي الشاشة أو يظهر “block” جديد في Console.
  4) خروج مفاجئ لأن `sed -i` و awk مع اقتباس مزدوج يختلفان عبر nix/bash في Replit.
  5) عند استخدام curl/tee أحيانًا تُفشل -D/-o مسارات لا تُنشأ مسبقًا فيظهر “No such file or directory”.

ما أحتاجه منك: “دليل نمطي” لكتابة السكربتات بحيث:
- لا تُمسح الشاشة ولا يُفتح console block جديد أثناء التنفيذ.
- مخرجات السطر الأخير دائمًا تكون بلوك القبول فقط.
- تجنّب مشاكل الاقتباس وhistory expansion وHeredoc.
- مسارات الملفات تُنشأ دائمًا قبل الاستخدام.
- if/grep/awk/sed تُكتب بشكل متوافق مع بيئة Replit.

أطلب منك:
1) قالب سكربت قياسي (skeleton) موحّد للبيئة في Replit Shell:
   - خيارات set الصحيحة، إطفاء history expansion، خطّاف trap لإيقاف heartbeat.
   - دالة hb() للطباعة، ومواضع mkdir -p، وتسمية ملفات التقارير.
   - طريقة موثوقة لـ heredoc بلا توسعة: <<'EOF' مع أمثلة.
   - بدائل موصى بها لـ sed -i/awk عندما نحتاج إدخال نص متعدد الأسطر في ملفات TSX (مثلاً: استخدام ed أو node helper مؤقّت).
2) إرشادات تمنع اختفاء الشاشة:
   - الفرق العملي بين Console وShell في Replit، ومتى ينتج “block” جديد وكيف نتجنّبه.
   - هل يُفضَّل إيقاف next dev مؤقتًا قبل لمس الملفات؟ ما هي الأوامر الآمنة المقترَحة لذلك؟ (بدون تنفيذ، فقط توصية).
   - كيف نضمن أن السكربت لا يطلق عمليات تبقى بالخلفية وتسبّب clear أو block جديد.
3) نمط قبول robust:
   - استخدام printf بدل echo عند وجود متغيرات تحوي أسطر جديدة.
   - تنسيق ثابت:
     -- Acceptance --
     KEY1=…
     KEY2=…
     …
     -- /Acceptance --
   - نصائح لمنع كسر البلوك بسبب ألوان أو محارف control.
4) نصائح لأوامر curl:
   - قوالب بمهلات ثابتة، وإنشاء المجلدات قبل -D/-o، ومعالجة الأكواد بدون eval.
   - كيفية كتابة اختبارات ترتيب (age→init→emit) بدون الاعتماد على أدوات غير متاحة.

أريد إجابة مُفصّلة وقابلة للتطبيق مباشرة: نماذج سكربتات قصيرة، وقوائم “Do/Don’t”، وأفضل ممارسات خاصة ببيئة Replit (Shell وConsole) لضمان عدم اختفاء الشاشة وثبات المخرجات. لا تُجري أي تعديل أو تشغيل.
