مهمة عاجلة: إصلاح جذري ونهائي لمشاكل FFA/الواجهة/الـRTC
ملخص الوضع الحالي

الفلاتر (الجنس/البلدان) وزر Previous وميزة تجميل الوجه ما زالت مقفلة للمستخدمين المجانيين رغم تفعيل FFA.

بطاقة الطرف الآخر في أعلى/أسفل يسار الفيديو تظهر Unknown/Unknown بدل معلومات ديناميكية (الدولة/المدينة/الجنس).

الرسائل تعمل عبر DataChannel، لكن زر الإعجاب يظهر أحيانًا “لا يوجد اتصال نشط”.

المطابقة لا تبدأ تلقائيًا عند دخول /chat؛ أحيانًا لا تبدأ إلا بعد الضغط على “التالي”.

رُصدت أخطاء كونسول مثل: window is not defined (SSR) وحلقة أحداث أدت إلى “Maximum call stack size exceeded”.

تقارير قبول سابقة كانت “خضراء” لكن سلوك الواجهة لم يتغير (تم تعديل ملفات لا تُستخدم فعليًا أو كان الفحص ناقصًا).

ما جُرّب سابقًا (مختصر وعملي)

Bridge/FFA bootstrap: إضافة freeForAllBridge + حقن FFA runtime، ثم إضافة مُجيب meta على قناة البيانات، وربط أحداث rtc:phase/rtc:pair/ditona:peer-meta.

Autostart: خطاف يبدأ rtc.next() تلقائيًا.

Runtime gating: استبدال const freeForAll = … بـ isFFA()، وتوحيد disabled={!(isFFA() || isVip)}.

Meta عبر DC: إرسال meta:init تلقائيًا والرد عليها، وبثّ ditona:peer-meta.

إصلاحات جزئية لـ /api/message/allow و فحص readyState قبل الإعجاب.

النتيجة: الرسائل والداتا شانل تتحسن، لكن الواجهة ما زالت مقفلة، وUnknown مستمر، وAutostart غير مضمون دائمًا.

تشخيصنا (الأسباب الأكثر ترجيحًا)

عدم تطابق الملفات المعدّلة مع المستخدمة فعليًا: التطبيق يستعمل GenderModal.tsx / CountryModal.tsx بينما تعديلات تمت في GenderSelect/CountrySelect سابقًا.

مشاكل SSR/CSR: شيفرات تعتمد على window تعمل أثناء SSR فتفشل (window is not defined) أو تتسرب تأثيراتها إلى HMR.

Bridge loop: إعادة بثّ نفس الحدث إلى نفسه سابقًا سببت حلقات.

FFA gating: ما زالت قيود VIP تُطبّق لأن القراءة تتم من مسار أو حالة غير محدثة وقت التشغيل.

Meta pumping: ضخّ peer-meta يصل إلى الأحداث لكنه لا يحدّث المكوّنات/الحالة الفعلية التي ترسم البطاقات.

المطلوب منك (خطة إصلاح جذرية 100%)

أ. تدقيق الشجرة الفعلية للواجهة

حدّد بدقة المكونات التي تُعرض فعليًا على /chat:
ChatToolbar.tsx, FilterBar.tsx, GenderModal.tsx, CountryModal.tsx, بطاقة المعلومات (PeerInfo/PeerMetadata)، وChatMessagingBar/LikeHud.

اكتب أين تُقرأ قيم disabled وأين تُستمد حالة FFA/VIP.

ب. توحيد FFA Runtime

اجعل المصدر الوحيد للحقيقة هو isFFA() وقت التشغيل.
كل disabled للفلاتر/Prev/Beauty يجب أن تكون !(isFFA() || isVip).

أزل أي const freeForAll = … أو تحكّم مبني وقت البناء.

ج. حماية SSR

أي ملف يلمس window يجب أن يكون client-only (ملف .client.ts(x) أو use client) مع حارس typeof window !== 'undefined'.

راجع freeForAllBridge.ts وdcMetaResponder.client.ts ومواضع الاستيراد في ChatClient.tsx.

د. ضخّ الميتا في الواجهة

تأكد أن ditona:peer-meta يحدّث الحالة/الستيت التي تقرأ منها بطاقة الطرف الآخر فعليًا (ليس مجرد console).
اربطه بمخزن الحالة المستخدم في بطاقة المعلومات (state/peerMeta أو hook فعلي).

هـ. Autostart حقيقي

تأكد أن rtc.next() يُستدعى مرة واحدة بعد Hydration وأنه لا يُحجب بفحص اشتراك أو مودال تم إلغاؤه سابقًا (Tap to start).

وثّق سبب أي تأخير (Consent/Media/Geo).

و. الإعجاب

اربط Like بـ pairId الحالي وDataChannel المفتوح؛ عند فشل الـREST، استخدم رسالة واضحة وتجنب “لا يوجد اتصال نشط” عندما تكون DC مفتوحة.

تعريف “الانتهاء” (Acceptance Final)

نفّذ اختبارات تحميل بارد (بدون HMR) على سطح مكتب + موبايل، وحقق جميع البنود:

صِفر أخطاء كونسول (لا window is not defined، لا حلقات).

بعد دخول /chat بـ ≤2 ثوانٍ: rtc:phase = searching يظهر تلقائيًا (لا حاجة للضغط على التالي).

Prev/Filters/Beauty ليست معطّلة عند مستخدم FFA.

يمكن اختيار الجنس والبلدان ويُحفظ الاختيار ويؤثر في المطابقة.

بعد الاتصال بـ ≤300ms: بطاقة الطرف الآخر تعرض الدولة/المدينة/الجنس بدل Unknown.

زر الإعجاب يعمل:

REST /api/like يرجع 200،

أو عبر DC يتبادل حدث like بلا رسالة خطأ خاطئة.

السحب يمين/يسار يعادل Previous/Next بلا شاشة سوداء.

تقاريرك تشمل: لقطات شاشة، مقتطف كونسول (الأحداث/الأخطاء=0)، ونتائج Network (200/204 للنقاط المعنية).

المخرجات المطلوبة منك

PR واحد شامل يذكر الملفات المعدّلة وأسباب التعديل.

ملف Acceptance Report نهائي وفق البنود أعلاه + صور/سجلات تؤكد ذلك.

توضيح إن كانت هناك ملفات “ميتة” غير مستخدمة وإزالتها أو توحيدها.

الهدف: حل جذري نهائي يمنع تكرار الأعطال ويجعل تجربة FFA مطابقة للمطلوب دون رجوع لنفس المشكلة مرة أخرى.