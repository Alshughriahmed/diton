الهدف

فتح ‎/api/like‎ في ‎middleware‎ على الإنتاج وتمرير فحص اللايك.

مزامنة ❤️ بالعميل عبر ‎bus‎ موجود.

إظهار شارة ❤️ أعلى اليسار مرتبطة بـ‎pairId‎.

تقرير نهائي بكل ما نُفِّذ.

القيود

لا حذف ولا تعطيل لأي ميزة.

تغييرات صغيرة، قابلة للعكس، مع نسخ احتياطية تحت ‎_ops/backups/‎ وتقارير تحت ‎_ops/reports/‎.

حلقات الانتظار ≤ 2 دقائق كحد أقصى.

عدم طباعة أسرار ENV.

الخطوة 1 — السماح النهائي لـ ‎/api/like‎ في ‎middleware‎ + نشر

المدخلات المتوقعة: الملف ‎src/middleware.ts‎ موجود.
النتيجة: 401 تتحول إلى 200 على ‎GET /api/like?pairId=…‎.

#!/usr/bin/env bash
set -euo pipefail

MW="src/middleware.ts"; [[ -f "$MW" ]] || MW="middleware.ts"
TS="$(date -u +%Y%m%d-%H%M%S)"; BK="_ops/backups/mw_like_${TS}"; mkdir -p "$BK"
cp -a "$MW" "$BK/middleware.ts.bak"

# حقن سماح مبكر صريح لمسار /api/like (idempotent)
perl -0777 -i -pe '
  if(index($_,"/api/like")<0){
    s/(export\s+function\s+middleware\s*\([^)]*\)\s*\{\s*)/$1\n  try { const { pathname } = new URL(req.url); if (pathname.startsWith("\/api\/like")) { return NextResponse.next(); } } catch {}\n/s;
  }
' "$MW"

# بناء ونشر
pnpm -s build
git add -A
git commit -m "chore(mw): allow /api/like early in middleware" || true
git push origin main || true

echo "-- Acceptance --"
echo "LIKE_API_ALLOWLIST_INJECTED=1"
echo "BUILD_RC=0"
echo "BACKUP_DIR=$BK"


قبول: ‎LIKE_API_ALLOWLIST_INJECTED=1‎ و‎BUILD_RC=0‎.

الخطوة 2 — فحص إنتاجي للايك (جاهزية + inc/dec)

النتيجة: ‎ROUTE_READY=1‎ و‎LIKE_INC_OK=1‎ و‎UNLIKE_OK=1‎.

#!/usr/bin/env bash
set -euo pipefail
BASE="${BASE:-https://www.ditonachat.com}"
TS="$(date -u +%Y%m%d-%H%M%S)"; RPT="_ops/reports/like_e2e_${TS}.log"; mkdir -p _ops/reports
exec > >(tee -a "$RPT") 2>&1

have(){ command -v "$1" >/dev/null 2>&1; }
uuid(){ node -e 'console.log(require("crypto").randomUUID())'; }
jget(){ node -e 'const j=JSON.parse(process.argv[1]);console.log(j[process.argv[2]]??"")' "$1" "$2"; }

PAIR="$(uuid | tr '[:upper:]' '[:lower:]')"; A="$(uuid | tr '[:upper:]' '[:lower:]')"; B="$(uuid | tr '[:upper:]' '[:lower:]')"
echo "BASE=$BASE"; echo "REPORT=$RPT"; echo "PAIR=$PAIR"

# readiness ≤ 120s
READY=0
for i in $(seq 1 24); do
  HTTP=$(curl -sS -o /tmp/get.json -w "%{http_code}" -H "x-anon: $A" "$BASE/api/like?pairId=$PAIR" || echo "")
  BODY="$(cat /tmp/get.json || true)"; C=""; [ "$HTTP" = "200" ] && C="$(jget "$BODY" count || true)"
  echo "PROBE $i code=$HTTP body=$BODY"
  [ -n "$C" ] && READY=1 && break
  sleep 5
done
echo "ROUTE_READY=$READY"

LIKE_INC_OK=0; UNLIKE_OK=0
if [ "$READY" = "1" ]; then
  incA1=$(curl -sS -XPOST "$BASE/api/like?pairId=$PAIR&op=inc" -H "x-anon: $A"); echo "incA1=$incA1"
  incA2=$(curl -sS -XPOST "$BASE/api/like?pairId=$PAIR&op=inc" -H "x-anon: $A"); echo "incA2=$incA2"
  incB1=$(curl -sS -XPOST "$BASE/api/like?pairId=$PAIR&op=inc" -H "x-anon: $B"); echo "incB1=$incB1"
  getA=$(curl  -sS      "$BASE/api/like?pairId=$PAIR"              -H "x-anon: $A"); echo "getA=$getA"
  decA=$(curl -sS -XPOST "$BASE/api/like?pairId=$PAIR&op=dec"       -H "x-anon: $A"); echo "decA=$decA"
  getB=$(curl  -sS      "$BASE/api/like?pairId=$PAIR"              -H "x-anon: $B"); echo "getB=$getB"

  cGetA="$(jget "$getA" count || echo "")"; cGetB="$(jget "$getB" count || echo "")"; youB="$(jget "$getB" you || echo "")"
  [ "$cGetA" = "2" ] && LIKE_INC_OK=1 || true
  if [ "$cGetB" = "1" ] && { [ "$youB" = "true" ] || [ "$youB" = "false" ]; }; then UNLIKE_OK=1; fi
fi

echo "-- Acceptance --"
echo "ROUTE_READY=$READY"
echo "LIKE_INC_OK=$LIKE_INC_OK"
echo "UNLIKE_OK=$UNLIKE_OK"
echo "REPORT=$RPT"

الخطوة 3 — مزامنة ❤️ على العميل (تحقق وربط فقط)

الوضع: ‎src/app/chat/likeSyncClient.ts‎ موجود ومُستورد في ‎ChatClient.tsx‎.
التنفيذ: تحقق تلقائي دون تعديل.

#!/usr/bin/env bash
set -euo pipefail
CC="src/app/chat/ChatClient.tsx"; LC="src/app/chat/likeSyncClient.ts"
WIRED=$([ -f "$CC" ] && grep -q 'likeSyncClient' "$CC" && echo 1 || echo 0)
FILE_OK=$([ -s "$LC" ] && echo 1 || echo 0)
echo "-- Acceptance --"; echo "LIKE_SYNC_FILE_OK=$FILE_OK"; echo "LIKE_SYNC_WIRED=$WIRED"


قبول: ‎LIKE_SYNC_FILE_OK=1‎ و‎LIKE_SYNC_WIRED=1‎.

الخطوة 4 — شارة ❤️ أعلى اليسار مرتبطة بـ‎pairId‎ (Minimal-Diff)

الفكرة: مكوّن عميل خفيف يَستمع لـ‎bus "like:update"‎ و‎"rtc:pair"‎ ويعرض الشارة بشكل ثابت دون تعديل جذري للـUI.

#!/usr/bin/env bash
set -euo pipefail
TS="$(date -u +%Y%m%d-%H%M%S)"; BK="_ops/backups/like_hud_${TS}"; mkdir -p "$BK"
CC="src/app/chat/ChatClient.tsx"; cp -a "$CC" "$BK/ChatClient.tsx.bak"

F="src/app/chat/LikeHud.tsx"
mkdir -p "src/app/chat"
cat >"$F" <<'TS'
"use client";
import { useEffect, useState } from "react";
import { busOn } from "../../utils/bus";

export default function LikeHud(){
  const [pair,setPair]=useState<string|null>(null);
  const [count,setCount]=useState<number>(0);
  useEffect(()=>{
    const off1=busOn("rtc:pair",(e:any)=> setPair(e?.pairId||e?.id||null));
    const off2=busOn("like:update",(p:any)=> setCount(typeof p?.count==="number"?p.count:0));
    return ()=>{ off1?.(); off2?.(); };
  },[]);
  return (
    <div className="pointer-events-none fixed left-2 top-2 z-[60] select-none">
      <div className="rounded-full bg-black/60 text-white text-xs px-3 py-1">
        <span>♥ {count}</span>{pair? <span className="opacity-60"> · {pair.slice(0,8)}</span>:null}
      </div>
    </div>
  );
}
TS

# استيراد ثم حقن <LikeHud/> بعد بداية return
if ! grep -q 'LikeHud' "$CC"; then
  perl -0777 -i -pe 's/^(import .*\n)/$1import LikeHud from ".\/LikeHud";\n/s' "$CC"
  perl -0777 -i -pe 's/return\s*\(\s*/return (\n    <LikeHud \/>\n/s' "$CC"
fi

pnpm -s build

echo "-- Acceptance --"
echo "LIKE_HUD_ADDED=1"
echo "BUILD_RC=0"
echo "BACKUP_DIR=$BK"


قبول: ‎LIKE_HUD_ADDED=1‎ و‎BUILD_RC=0‎.
ملاحظة: هذا لا يغيّر منطق المطابقة أو الطبقات القائمة. فقط شارة ثابتة.

الخطوة 5 — قبول شامل

التنفيذ: إن وُجد ‎_ops/acc_full.sh‎ شغّله ضد الإنتاج.

#!/usr/bin/env bash
set -euo pipefail
BASE="${BASE:-https://www.ditonachat.com}"
if [ -x "_ops/acc_full.sh" ]; then
  bash _ops/acc_full.sh "$BASE" | tee "_ops/reports/acc_full_$(date -u +%Y%m%d-%H%M%S).log"
else
  echo "-- Acceptance --"; echo "ACC_FULL_SCRIPT_FOUND=0"
fi

الخطوة 6 — تقرير نهائي

المطلوب: ملف ‎_ops/reports/agent_like_task_<ts>.md‎ يتضمن:

ماذا تغيّر وأين مع مسارات الملفات.

مخرجات القبول لكل خطوة.

روابط التقارير ‎like_e2e_.log‎ و‎acc_full_.log‎.

تأكيد عدم حذف أو تعطيل أي ميزة.

توصية متابعة: ربط بطاقات أعلى/أسفل اليسار بميتا ‎pair‎ إن توفرت من الخادم، وإلا إبقاء الشارة الحالية.

قواعد التنفيذ: خطوة واحدة = سكربت واحد. نفِّذ بالترتيب. كل سكربت يطبع كتلة قبول واضحة.